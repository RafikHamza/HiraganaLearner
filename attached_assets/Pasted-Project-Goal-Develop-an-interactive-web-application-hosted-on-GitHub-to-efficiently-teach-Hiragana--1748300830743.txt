Project Goal:
Develop an interactive web application hosted on GitHub to efficiently teach Hiragana, Katakana, and simple Japanese. The primary focus is rapid Hiragana acquisition through engaging, interactive methods.

AI Developer Agent Prompts:
Phase 1: Project Setup and Core Structure
Prompt 1.1: Initialize GitHub Repository and Basic Website Structure

Agent Role: GitHub Repository Manager & Frontend Architect
Task: Create a new public GitHub repository named JapaneseLearningHub. Set up the basic file structure for a web application (HTML, CSS, JavaScript folders, index.html, README.md). Include a simple placeholder for the main learning area and navigation.
Constraints: Use clean, semantic HTML5. No complex frameworks yet.
Prompt 1.2: Implement Website Statistics Tracking

Agent Role: Data Analytics Integrator
Task: Integrate GitHub's built-in "Insights" features (Traffic, Pulse, Contributors) into the project's README.md or a dedicated "Stats" page. Additionally, propose and implement a simple, privacy-friendly way to track user progress (e.g., number of lessons completed, quizzes taken, characters mastered) within the application itself, potentially using local storage or a simple JSON file structure for progress tracking on a per-user basis (if authentication is later implemented, or just for demonstration). Do NOT use any external analytics services for now.
Expected Output: Updated README.md with instructions on viewing GitHub Insights. JavaScript code for basic in-app progress tracking (e.g., local storage).
Phase 2: Hiragana Learning Module - Rapid Acquisition Focus
Prompt 2.1: Design and Implement Hiragana Chart and Mnemonic Lessons

Agent Role: Content & UI/UX Designer, Frontend Developer
Task: Create an interactive Hiragana chart display. For each Hiragana character, include:
The character itself.
Its Romanized pronunciation (Romaji).
An audio pronunciation file (provide placeholders for now if audio is not generated by the agent).
A unique, simple mnemonic (memory aid) in text and an associated icon/animation. Research and suggest efficient mnemonic strategies for Hiragana.
Stroke order animation/diagram.
Key Features:
Clickable characters to play audio and reveal mnemonics/stroke order.
Progress tracking for characters "learned" (user can mark as learned).
Research Focus (for the agent): Efficient Hiragana learning methods (mnemonics, spaced repetition, writing practice).
Expected Output: HTML/CSS/JavaScript for the Hiragana chart, mnemonic display, and stroke order animations. Placeholder audio links.
Prompt 2.2: Develop Interactive Hiragana Flashcards

Agent Role: Interactive Element Developer
Task: Create a flashcard system for Hiragana.
Modes:
Hiragana to Romaji.
Romaji to Hiragana.
Audio to Hiragana.
Features:
Spaced Repetition System (SRS) integration (basic implementation: good answers appear less frequently, bad answers more often).
"Flip" animation for cards.
Score tracking for flashcard sessions.
Sound effects for correct/incorrect answers.
Expected Output: JavaScript for flashcard logic, HTML/CSS for flashcard UI, basic SRS algorithm.
Prompt 2.3: Implement Hiragana Games for Memorization

Agent Role: Gamification Specialist
Task: Develop at least two interactive games focused on rapid Hiragana memorization.
Game 1: Matching Game: Match Hiragana characters with their Romaji or vice versa.
Game 2: Typing Practice: User types the Romaji for a displayed Hiragana character (or vice versa).
Gamification Elements: Points, levels, clear completion indicators, encouraging feedback.
Desired Features: Animations for correct/incorrect answers, celebratory animations upon game completion.
Expected Output: HTML/CSS/JavaScript for two Hiragana games.
Phase 3: Katakana and Simple Japanese Integration
Prompt 3.1: Develop Katakana Learning Module

Agent Role: Content & UI/UX Designer, Frontend Developer
Task: Replicate the interactive chart, flashcard, and game functionalities developed for Hiragana, but adapted for Katakana. Ensure consistent UI/UX.
Expected Output: HTML/CSS/JavaScript for Katakana learning modules, mirroring Hiragana's interactive features.
Prompt 3.2: Introduce Simple Japanese Vocabulary and Phrases

Agent Role: Language Content Integrator
Task: Create a section for simple Japanese vocabulary and common phrases.
Structure: Present words/phrases with Hiragana/Katakana, Romaji, English translation, and audio pronunciation.
Interactive Element: Simple quizzes (multiple choice, drag-and-drop) to test vocabulary.
Desired Feature: Interactive dialogues where users can select responses and hear audio.
Expected Output: HTML/CSS/JavaScript for vocabulary display and simple quizzes.
Phase 4: User Experience and Refinement
Prompt 4.1: Enhance UI/UX with Icons and Animations

Agent Role: UI/UX Animator & Asset Integrator
Task: Review all existing modules and add appropriate icons and subtle animations to enhance user engagement and provide visual feedback.
Examples: Icons for "learn," "practice," "game" sections. Animations for correct answers, card flips, level-ups, progress bar updates.
Constraints: Animations should be smooth and non-distracting.
Expected Output: CSS for animations, integration of relevant icon libraries (e.g., Font Awesome) or custom SVG icons.
Prompt 4.2: Implement Overall Progress Tracking and User Profile (Basic)

Agent Role: Data Persistence & Profile Developer
Task: Expand the existing progress tracking to cover Hiragana, Katakana, and vocabulary. Display overall progress (e.g., percentage of characters mastered, lessons completed) on a simple dashboard or "My Progress" page. Implement a basic "user profile" in local storage to save progress across sessions.
Expected Output: Enhanced JavaScript for progress tracking, HTML/CSS for a progress dashboard.